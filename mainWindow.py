from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QObject, pyqtSlot
from PyQt5.QtGui import QKeySequence
from PyQt5.QtWidgets import QShortcut
from PyQt5.QtCore import Qt
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *
from PyQt5 import QtCore
import speech_recognition as sr
import json,os,playsound
from gtts import gTTS
import winsound
r = sr.Recognizer()



class Ui_mainWindow(QObject):
    def setupUi(self, mainWindow):
        mainWindow.setObjectName("mainWindow")
        mainWindow.resize(485, 552)
        mainWindow.setMaximumSize(QtCore.QSize(485, 552))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("./assets/img/icons8-holy-bible-36.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        mainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(mainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(20, 10, 451, 491))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox.sizePolicy().hasHeightForWidth())
        self.groupBox.setSizePolicy(sizePolicy)
        self.groupBox.setMaximumSize(QtCore.QSize(451, 491))
        self.groupBox.setObjectName("groupBox")
        self.layoutWidget = QtWidgets.QWidget(self.groupBox)
        self.layoutWidget.setGeometry(QtCore.QRect(11, 44, 431, 431))
        self.layoutWidget.setObjectName("layoutWidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.layoutWidget)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.layoutWidget)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.translation = QtWidgets.QComboBox(self.layoutWidget)
        self.translation.setObjectName("translation")
        self.translation.addItem("")
        self.translation.addItem("")
        self.horizontalLayout.addWidget(self.translation)
        self.gridLayout.addLayout(self.horizontalLayout, 0, 0, 1, 1)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_2 = QtWidgets.QLabel(self.layoutWidget)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_2.addWidget(self.label_2)
        self.book = QtWidgets.QComboBox(self.layoutWidget)
        self.book.setObjectName("book")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.book.addItem("")
        self.horizontalLayout_2.addWidget(self.book)
        self.Book_voiceInput = QtWidgets.QPushButton(self.layoutWidget)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("./assets/img/icons8-voice-32.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Book_voiceInput.setIcon(icon1)
        self.Book_voiceInput.setObjectName("Book_voiceInput")
        self.Book_voiceInput.clicked.connect(self.voice_book_name)
        self.Book_voiceInput.setEnabled(False)
        self.horizontalLayout_2.addWidget(self.Book_voiceInput)
        self.gridLayout.addLayout(self.horizontalLayout_2, 1, 0, 1, 1)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_4 = QtWidgets.QLabel(self.layoutWidget)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_3.addWidget(self.label_4)
        self.chapter = QtWidgets.QLineEdit(self.layoutWidget)
        self.chapter.setObjectName("chapter")
        self.horizontalLayout_3.addWidget(self.chapter)
        self.Chapter_VoiceInput = QtWidgets.QPushButton(self.layoutWidget)
        self.Chapter_VoiceInput.setIcon(icon1)
        self.Chapter_VoiceInput.setObjectName("Chapter_VoiceInput")
        self.Chapter_VoiceInput.clicked.connect(self.voice_chapter_name)
        self.Chapter_VoiceInput.setEnabled(False)
        self.horizontalLayout_3.addWidget(self.Chapter_VoiceInput)
        self.gridLayout.addLayout(self.horizontalLayout_3, 2, 0, 1, 1)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_3 = QtWidgets.QLabel(self.layoutWidget)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_4.addWidget(self.label_3)
        self.verse = QtWidgets.QLineEdit(self.layoutWidget)
        self.verse.setObjectName("verse")
        self.horizontalLayout_4.addWidget(self.verse)
        self.Verse_VoiceInput = QtWidgets.QPushButton(self.layoutWidget)
        self.Verse_VoiceInput.setIcon(icon1)
        self.Verse_VoiceInput.setObjectName("Verse_VoiceInput")
        self.Verse_VoiceInput.setEnabled(False)
        self.Verse_VoiceInput.clicked.connect(self.voice_verse_name)
        self.horizontalLayout_4.addWidget(self.Verse_VoiceInput)
        self.gridLayout.addLayout(self.horizontalLayout_4, 3, 0, 1, 1)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.Ok_button = QtWidgets.QPushButton(self.layoutWidget)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("./assets/img/icons8-checked-32.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Ok_button.setIcon(icon2)
        self.Ok_button.setObjectName("Ok_button")
        self.Ok_button.clicked.connect(self.confirm_button)
        self.horizontalLayout_5.addWidget(self.Ok_button)
        self.Cancel_button = QtWidgets.QPushButton(self.layoutWidget)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("./assets/img/icons8-cancel-32.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Cancel_button.setIcon(icon3)
        self.Cancel_button.setObjectName("Cancel_button")
        self.Cancel_button.clicked.connect(self.close)
        self.horizontalLayout_5.addWidget(self.Cancel_button)
        self.gridLayout.addLayout(self.horizontalLayout_5, 4, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 0, 0, 1, 1)
        self.groupBox_2 = QtWidgets.QGroupBox(self.layoutWidget)
        self.groupBox_2.setObjectName("groupBox_2")
        self.output = QtWidgets.QTextEdit(self.groupBox_2)
        self.output.setGeometry(QtCore.QRect(10, 40, 411, 111))
        self.output.setObjectName("output")
        self.layoutWidget1 = QtWidgets.QWidget(self.groupBox_2)
        self.layoutWidget1.setGeometry(QtCore.QRect(10, 160, 411, 31))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.layoutWidget1)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.Read_button = QtWidgets.QPushButton(self.layoutWidget1)
        self.Read_button.clicked.connect(self.play_audio)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("./assets/img/icons8-circled-play-32.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Read_button.setIcon(icon4)
        self.Read_button.setObjectName("Read_button")
        self.horizontalLayout_6.addWidget(self.Read_button)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("./assets/img/icons8-stop-32.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.gridLayout_2.addWidget(self.groupBox_2, 1, 0, 1, 1)
        mainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(mainWindow)
        self.statusbar.setObjectName("statusbar")
        mainWindow.setStatusBar(self.statusbar)
        self.retranslateUi(mainWindow)
        QtCore.QMetaObject.connectSlotsByName(mainWindow)

    def retranslateUi(self, mainWindow):
        _translate = QtCore.QCoreApplication.translate
        mainWindow.setWindowTitle(_translate("mainWindow", "Bible Searcher"))
        self.groupBox.setTitle(_translate("mainWindow", "Audio Bible/Text Searcher"))
        self.label.setText(_translate("mainWindow", "Bible Translation :"))
        self.translation.setItemText(0, _translate("mainWindow", "KJV"))
        self.translation.setItemText(1, _translate("mainWindow", "ASV"))
        self.label_2.setText(_translate("mainWindow", "Book:"))
        self.book.setItemText(0, _translate("mainWindow", "Genesis"))
        self.book.setItemText(1, _translate("mainWindow", "Exodus "))
        self.book.setItemText(2, _translate("mainWindow", "Leviticus "))
        self.book.setItemText(3, _translate("mainWindow", "Numbers "))
        self.book.setItemText(4, _translate("mainWindow", "Deuteronomy"))
        self.book.setItemText(5, _translate("mainWindow", "Joshua "))
        self.book.setItemText(6, _translate("mainWindow", "Judges"))
        self.book.setItemText(7, _translate("mainWindow", "Ruth"))
        self.book.setItemText(8, _translate("mainWindow", "1 Samuel"))
        self.book.setItemText(9, _translate("mainWindow", "2 Samuel"))
        self.book.setItemText(10, _translate("mainWindow", "1 Kings"))
        self.book.setItemText(11, _translate("mainWindow", "2 Kings"))
        self.book.setItemText(12, _translate("mainWindow", "1 Chronicles"))
        self.book.setItemText(13, _translate("mainWindow", "2 Chronicles"))
        self.book.setItemText(14, _translate("mainWindow", "Ezra"))
        self.book.setItemText(15, _translate("mainWindow", "Nehemiah"))
        self.book.setItemText(16, _translate("mainWindow", "Esther"))
        self.book.setItemText(17, _translate("mainWindow", "Psalms"))
        self.book.setItemText(18, _translate("mainWindow", "Proverbs"))
        self.book.setItemText(19, _translate("mainWindow", "Ecclesiastes"))
        self.book.setItemText(20, _translate("mainWindow", "Song of Songs"))
        self.book.setItemText(21, _translate("mainWindow", "Isaiah"))
        self.book.setItemText(22, _translate("mainWindow", "Jeremiah"))
        self.book.setItemText(23, _translate("mainWindow", "Lamentations"))
        self.book.setItemText(24, _translate("mainWindow", "Ezekiel"))
        self.book.setItemText(25, _translate("mainWindow", "Daniel"))
        self.book.setItemText(26, _translate("mainWindow", "Hosea"))
        self.book.setItemText(27, _translate("mainWindow", "Joel"))
        self.book.setItemText(28, _translate("mainWindow", "Amos"))
        self.book.setItemText(29, _translate("mainWindow", "Obadiah"))
        self.book.setItemText(30, _translate("mainWindow", "Jonah"))
        self.book.setItemText(31, _translate("mainWindow", "Micah"))
        self.book.setItemText(32, _translate("mainWindow", "Nahum"))
        self.book.setItemText(33, _translate("mainWindow", "Habakkuk"))
        self.book.setItemText(34, _translate("mainWindow", "Zephaniah"))
        self.book.setItemText(35, _translate("mainWindow", "Haggai"))
        self.book.setItemText(36, _translate("mainWindow", "Zechariah"))
        self.book.setItemText(37, _translate("mainWindow", "Malachi"))
        self.book.setItemText(38, _translate("mainWindow", "Matthew"))
        self.book.setItemText(39, _translate("mainWindow", "Mark"))
        self.book.setItemText(40, _translate("mainWindow", "Luke"))
        self.book.setItemText(41, _translate("mainWindow", "John"))
        self.book.setItemText(42, _translate("mainWindow", "Acts"))
        self.book.setItemText(43, _translate("mainWindow", "Romans"))
        self.book.setItemText(44, _translate("mainWindow", "1 Corinthians"))
        self.book.setItemText(45, _translate("mainWindow", "2 Corinthians"))
        self.book.setItemText(46, _translate("mainWindow", "Galatians"))
        self.book.setItemText(47, _translate("mainWindow", "Ephesians"))
        self.book.setItemText(48, _translate("mainWindow", "Philippians"))
        self.book.setItemText(49, _translate("mainWindow", "Colossians"))
        self.book.setItemText(50, _translate("mainWindow", "1 Thessalonians"))
        self.book.setItemText(51, _translate("mainWindow", "2 Thessalonians"))
        self.book.setItemText(52, _translate("mainWindow", "1 Timothy"))
        self.book.setItemText(53, _translate("mainWindow", "2 Timothy"))
        self.book.setItemText(54, _translate("mainWindow", "Titus"))
        self.book.setItemText(55, _translate("mainWindow", "Philemon"))
        self.book.setItemText(56, _translate("mainWindow", "Hebrews"))
        self.book.setItemText(57, _translate("mainWindow", "James"))
        self.book.setItemText(58, _translate("mainWindow", "1 Peter"))
        self.book.setItemText(59, _translate("mainWindow", "2 Peter"))
        self.book.setItemText(60, _translate("mainWindow", "1 John"))
        self.book.setItemText(61, _translate("mainWindow", "2 John"))
        self.book.setItemText(62, _translate("mainWindow", "3 John"))
        self.book.setItemText(63, _translate("mainWindow", "Jude"))
        self.book.setItemText(64, _translate("mainWindow", "Revelation"))
        self.Book_voiceInput.setToolTip(_translate("mainWindow", "Speak out the book name"))
        self.Book_voiceInput.setText(_translate("mainWindow", "Voice Input"))
        self.Book_voiceInput.setShortcut(_translate("mainWindow", "Ctrl+B"))
        self.label_4.setText(_translate("mainWindow", "Chapter:"))
        self.Chapter_VoiceInput.setToolTip(_translate("mainWindow", "Speak the Chapter number"))
        self.Chapter_VoiceInput.setText(_translate("mainWindow", "Voice Input"))
        self.Chapter_VoiceInput.setShortcut(_translate("mainWindow", "Ctrl+Shift+C"))
        self.label_3.setText(_translate("mainWindow", "Verse:"))
        self.Verse_VoiceInput.setToolTip(_translate("mainWindow", "Speak the Verse"))
        self.Verse_VoiceInput.setText(_translate("mainWindow", "Voice Input"))
        self.Verse_VoiceInput.setShortcut(_translate("mainWindow", "Ctrl+Shift+V"))
        self.Ok_button.setText(_translate("mainWindow", "OK"))
        self.Cancel_button.setText(_translate("mainWindow", "Close"))
        self.groupBox_2.setTitle(_translate("mainWindow", "Verse"))
        self.Read_button.setText(_translate("mainWindow", "Read"))
    @pyqtSlot()
    def close(self):
        buttonReply = QMessageBox.question(None, 'Confirm', "Are you sure you want to close?", QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
        if buttonReply == QMessageBox.Yes:
            sys.exit(1)
    @pyqtSlot()
    def voice_book_name(self):
        print("Book name button")
    @pyqtSlot()
    def voice_chapter_name(self):
        print("Chapter name button")
        with sr.Microphone() as source:
            print("Talk")
            audio_text = r.listen(source)
            print("Text recieved")
            try:
                print("Text: "+r.recognize_google(audio_text))
                self.chapter.setText(str(r.recognize_google(audio_text)))
            except Exception as e:
                print("Sorry, I did not get that",e)      
    @pyqtSlot()
    def voice_verse_name(self):
        print("Verse name button")
        with sr.Microphone() as source:
            print("Talk")
            audio_text = r.listen(source)
            print("Text recieved")
            try:
            # print("Text: "+r.recognize_google(audio_text))
                self.verse.setText(str(r.recognize_google(audio_text)))
            except Exception as e:
                print("Sorry, I did not get that",e) 
    @pyqtSlot()
    def kjv_parser(self,chapter,verse,book):
        verse_split = verse.split('-')
        start = int(verse_split[0])
        end = int(verse_split[-1])
        new_text = ''
        with open('./assets/bible_data/kjv.json','r') as fp:
            data = fp.readlines()
            fp.close()
        for i in range(start,end+1):   
            for line in data: 
                text = json.loads(line)
                if(text['chapter'] == chapter) and (text['verse'] == i) and (text['book_name'] == book):
                    new_text = new_text +'\n' + '['+str(i) + ']' + '' + text['text']
        final_text = book + ': ' + str(chapter) + ':' + str(start)+'-'+str(end) + '\n' + new_text
        self.output.setText(final_text)
    @pyqtSlot()
    def asv_parser(self,chapter,verse,book):
        verse_split = verse.split('-')
        start = int(verse_split[0])
        end = int(verse_split[-1])
        new_text = ''
        with open('./assets/bible_data/asv.json','r') as fp:
            data = fp.readlines()
            fp.close()
        for i in range(start,end+1):   
            for line in data: 
                text = json.loads(line)
                if(text['chapter'] == chapter) and (text['verse'] == i) and (text['book_name'] == book):
                    new_text = new_text +'\n' + '['+str(i) + ']' + '' + text['text'] 
        final_text = book + ': ' + str(chapter) + ':' + str(start)+'-'+str(end) + '\n' + new_text
        self.output.setText(final_text)            
    @pyqtSlot()
    def confirm_button(self):
        chapter = 1
        verse = ''
        book = ''
        if(self.chapter.text() == ''):
            QMessageBox.information(None, "Info", "Please enter the chapter",QMessageBox.Ok)
            if QMessageBox.Accepted: 
                    self.chapter.setFocus() 
        elif(self.verse.text() == ''):
            QMessageBox.information(None, "Info", "Please enter the verse",QMessageBox.Ok)
            if QMessageBox.Accepted: 
                    self.verse.setFocus() 
        try:          
            chapter = int(self.chapter.text())
            verse = self.verse.text()
            book = str(self.book.currentText())
        except Exception as e:
            print(e)          
        if (self.translation.currentText() == 'KJV'):
             print('KJV bible')
             self.kjv_parser(chapter,verse,book)
        elif(self.translation.currentText() == 'ASV'):
             print('ASV Bible')
             self.asv_parser(chapter,verse,book)
    @pyqtSlot()
    def save_audio(self):
        text_verse = self.output.toPlainText()
        tts = gTTS(text=text_verse, lang='en')
        tts.save("./assets/audio/text.mp3")
                 
    @pyqtSlot()
    def play_audio(self):
        playsound.playsound("./assets/audio/text.mp3")
        os.remove("./assets/audio/text.mp3") 
        self.output.clear()
   
        

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    mainWindow = QtWidgets.QMainWindow()
    ui = Ui_mainWindow()
    ui.setupUi(mainWindow)
    mainWindow.show()
    sys.exit(app.exec_())
